version: '3.8'
services:
  app:
    build: .
    container_name: spring_app
    ports:
      - "8080:8080"
    volumes:
      - ./src:/app/src
      - ./pom.xml:/app/pom.xml
      - ./.mvn:/app/.mvn
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mongodb:
        condition: service_started
      db:
        condition: service_started
    networks:
      - app_network
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    container_name: postgres_db
    environment:
      - POSTGRES_DB=demo
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=analytics_db
    volumes:
      - mongodb_data:/data/db
    networks:
      - app_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  mongodb_data: